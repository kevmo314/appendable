"use strict";(()=>{var T=class a{constructor(e){this.resolver=e}static forUrl(e){return a.forResolver(async({start:t,end:r})=>{let n=await fetch(e,{headers:{Range:`bytes=${t}-${r}`}}),i=Number(n.headers.get("Content-Range").split("/")[1]);return{data:await n.arrayBuffer(),totalLength:i}})}static forResolver(e){let t=new a(async(r,n,i)=>(await e({start:r,end:n,expectedLength:i})).data);return t.originalResolver=e,t}getResolver(){return this.originalResolver}async get(e,t){let r=await this.resolver(e,t);return new TextDecoder().decode(r)}};var M=(t=>(t[t.JSONL=0]="JSONL",t[t.CSV=1]="CSV",t))(M||{});async function B(a){if(a.byteLength<4)throw new Error(`invalid metadata size ${a.byteLength}`);let e=new DataView(a),t=e.getUint16(0),r=e.getUint16(2);if(a.byteLength<4+r)throw new Error(`invalid metadata size ${a.byteLength}`);let n=a.slice(4,4+r);return{fieldName:new TextDecoder("utf-8").decode(n),fieldType:t}}function U(a){let e=new Map;for(let r of a)if(!e.has(r.fieldName))e.set(r.fieldName,[r.fieldType]);else{let n=e.get(r.fieldName);n?.push(r.fieldType),e.set(r.fieldName,n)}let t=[];return e.forEach((r,n)=>{t.push({fieldName:n,fieldTypes:r})}),t}var H=4096,V=class a{constructor(e,t,r,n,i,o){this.keys=e,this.leafPointers=t,this.internalPointers=r,this.dataFileResolver=n,this.fileFormat=i,this.pageFieldType=o}leaf(){return this.leafPointers.length>0}pointer(e){return this.leaf()?this.leafPointers[e]:{offset:this.internalPointers[e],length:0}}numPointers(){return this.internalPointers.length+this.leafPointers.length}size(){let e=4;for(let t=0;t<=this.keys.length-1;t++){let r=this.keys[t];r.dataPointer.length>0?e+=16:e+=4*r.value.byteLength}for(let t=0;t<=this.leafPointers.length-1;t++)e+=12;for(let t=0;t<=this.internalPointers.length-1;t++)e+=8;return BigInt(e)}async unmarshalBinary(e){let t=new DataView(e),r=t.getUint32(0);if(r>2147483647&&(r=r-4294967296),r<0?(this.leafPointers=new Array(-r).fill({offset:0n,length:0}).map(()=>({offset:0n,length:0})),this.keys=new Array(-r).fill(null).map(()=>new c({offset:0n,length:0},new ArrayBuffer(0)))):(this.internalPointers=Array(r+1).fill(0n).map(()=>0n),this.keys=new Array(r).fill(null).map(()=>new c({offset:0n,length:0},new ArrayBuffer(0)))),r===0)throw new Error("empty node");let i=4;for(let o=0;o<=this.keys.length-1;o++){t=new DataView(e,i,4);let p=t.getUint32(0);if(p===-1>>>0){t=new DataView(e,i+4);let d=t.getBigUint64(0),N=t.getUint32(8);this.keys[o].setDataPointer({offset:d,length:N});let x=this.keys[o].dataPointer,{data:y}=await this.dataFileResolver({start:Number(x.offset),end:Number(x.offset)+x.length-1}),K=this.parseValue(y);this.keys[o].setValue(K),i+=16}else{let d=e.slice(i+4,i+4+p);this.keys[o].setValue(d),i+=4+p}}for(let o=0;o<=this.leafPointers.length-1;o++)t=new DataView(e,i),this.leafPointers[o].offset=t.getBigUint64(0),this.leafPointers[o].length=t.getUint32(8),i+=12;for(let o=0;o<=this.internalPointers.length-1;o++)t=new DataView(e,i),this.internalPointers[o]=t.getBigUint64(0),i+=8}parseValue(e){let t=new TextDecoder().decode(e);switch(this.fileFormat){case 0:let r=JSON.parse(t);switch(this.pageFieldType){case 7:if(r!==null)throw new Error(`unrecognized value for null type: ${r}`);return new ArrayBuffer(0);case 6:return new Uint8Array([r?1:0]).buffer;case 3:case 1:case 2:let n=new ArrayBuffer(8);return new DataView(n).setFloat64(0,r,!0),n;case 0:return new TextEncoder().encode(r).buffer;default:throw new Error(`Unexpected Field Type. Got: ${this.pageFieldType}`)}case 1:return e}throw new Error("unexpected parsing error occured")}static async fromMemoryPointer(e,t,r,n,i){let{data:o}=await t({start:Number(e.offset),end:Number(e.offset)+4096-1}),p=new a([],[],[],r,n,i);return await p.unmarshalBinary(o),{node:p,bytesRead:H}}};var k=class{constructor(e,t){this.tree=e,this.key=t,this.records=[]}async init(){let e=await this.tree.root();if(e.rootNode===null)return!1;let t=e.rootNode,r=e.pointer,n=await this.tree.traverse(this.key,t,r);return this.records=n,!0}getKey(){return this.records[0].node.keys[this.records[0].index]}getPointer(){return this.records[0].node.pointer(this.records[0].index)}async increment(e,t){if(e===this.records.length)return!1;this.records[e].index+=t;let r=this.records[e].index<0,n=this.records[e].index>=this.records[e].node.numPointers();if(r||n){if(!this.increment(e+1,t)||!this.records[e+1])return!1;let i=await this.tree.readNode(this.records[e+1].node.pointer(this.records[e+1].index));this.records[e].node=i,r?this.records[e].index=this.records[e].node.numPointers()-1:this.records[e].index=0}return!0}async next(){return this.records.length===0?await this.init():this.increment(0,1)}async prev(){return this.records.length===0&&!await this.init()?!1:this.increment(0,-1)}};var W=4096,b=2n**64n-1n,E=class a{constructor(e,t){this.metaPagePromise=null;this.resolver=e,this.offset=t,this.metaPageData=null}async root(){let t=(await this.getMetaPage()).slice(0,12),r=new DataView(t),n=r.getBigUint64(0),i=r.getUint32(8);return{offset:n,length:i}}async metadata(){let e=await this.getMetaPage(),r=new DataView(e,24).getUint32(0);return e.slice(28,28+r)}async getMetaPage(){return this.metaPageData?this.metaPageData:(this.metaPagePromise||(this.metaPagePromise=this.resolver({start:Number(this.offset),end:Number(this.offset)+W-1}).then(({data:e})=>(this.metaPageData=e,this.metaPagePromise=null,e)).catch(e=>{throw this.metaPagePromise=null,e})),this.metaPagePromise)}async next(){let e=await this.getMetaPage(),r=new DataView(e,12,8).getBigUint64(0);return r===b?null:new a(this.resolver,r)}getOffset(){return this.offset}};function Q(a,e){let t=e.page(0);return new E(a,t)}var A=class{constructor(e,t,r,n,i){this.firstRef=new c({offset:0n,length:0},new Uint8Array([0]).buffer);this.lastRef=new c({offset:b,length:0},new Uint8Array([255]).buffer);this.tree=e,this.meta=t,this.dataFileResolver=r,this.fileFormat=n,this.pageFieldType=i}async root(){let e=await this.meta.root();if(!e||e.length===0)return{rootNode:null,pointer:e};let t=await this.readNode(e);return t?{rootNode:t,pointer:e}:{rootNode:null,pointer:e}}async readNode(e){try{let{node:t,bytesRead:r}=await V.fromMemoryPointer(e,this.tree,this.dataFileResolver,this.fileFormat,this.pageFieldType);if(!r)throw new Error("bytes read do not line up");return t}catch(t){throw new Error(`${t}`)}}iter(e){return new k(this,e)}async first(){let{rootNode:e}=await this.root();if(!e)throw new Error("unable to get root node");let t=await this.readNode(e.pointer(0));for(;!t.leaf();){let r=t.pointer(0);t=await this.readNode(r)}return t.keys[0]}async last(){let{rootNode:e}=await this.root();if(!e)throw new Error("unable to get root node");let t=await this.readNode(e.pointer(e.numPointers()-1));for(;!t.leaf();){let r=t.pointer(t.numPointers()-1);t=await this.readNode(r)}return t.keys[t.keys.length-1]}async traverse(e,t,r){let[n,i]=q(t.keys,e);if(t.leaf())return[{node:t,index:n,pointer:r}];i&&(n+=1);let o=t.pointer(n),p=await this.readNode(o);return[...await this.traverse(e,p,o),{node:t,index:n,pointer:r}]}async find(e){let t=this.iter(e);return await t.next()?[t.getKey(),t.getPointer()]:[new c({offset:0n,length:0},new Uint8Array(0).buffer),{offset:0n,length:0}]}},c=class{constructor(e,t){this.dataPointer=e,this.value=t}setDataPointer(e){this.dataPointer=e}setValue(e){this.value=e}static compareBytes(e,t){let r=new Uint8Array(e),n=new Uint8Array(t),i=Math.min(r.length,n.length);for(let o=0;o<i;o++)if(r[o]!==n[o])return r[o]<n[o]?-1:1;return r.length<n.length?-1:r.length>n.length?1:0}};function $(a,e){let t=c.compareBytes(a.value,e.value);return t!==0?t:a.dataPointer.offset>e.dataPointer.offset?1:a.dataPointer.offset<e.dataPointer.offset?-1:a.dataPointer.length>e.dataPointer.length?1:a.dataPointer.length<e.dataPointer.length?-1:0}function q(a,e){let t=a.length,r=0,n=t;for(;r<n;){let i=Math.floor((r+n)/2);$(a[i],e)<0?r=i+1:n=i}return[r,r<t&&$(a[r],e)===0]}var O=class a{constructor(e){this.database=e;this.queryObject={where:[],orderBy:void 0,select:void 0,limit:void 0}}toQuery(){return{where:this.queryObject.where?[...this.queryObject.where]:[],orderBy:this.queryObject.orderBy?[...this.queryObject.orderBy]:void 0,select:this.queryObject.select?[...this.queryObject.select]:void 0,limit:this.queryObject.limit}}get(){}where(e,t,r){let n=new a(this.database);return n.queryObject={...this.queryObject,where:[...this.queryObject.where||[],{key:e,operation:t,value:r}]},n}orderBy(e,t){let r=new a(this.database);return r.queryObject={...this.queryObject,orderBy:[...this.queryObject.orderBy||[],{key:e,direction:t}]},r}select(e){let t=new a(this.database);return t.queryObject={...this.queryObject,select:e},t}limit(e){let t=new a(this.database);return t.queryObject={...this.queryObject,limit:e},t}};function C(a){let e;if(a===null)return{fieldType:7,valueBuf:new ArrayBuffer(0)};switch(typeof a){case"bigint":case"number":return e=new ArrayBuffer(8),new DataView(e).setFloat64(0,Number(a),!0),{fieldType:3,valueBuf:e};case"boolean":return{fieldType:6,valueBuf:new Uint8Array([a?1:0]).buffer};case"string":return{fieldType:0,valueBuf:new TextEncoder().encode(a).buffer}}return null}function w(a,e){let t=JSON.parse(a);return e&&e.length>0?e.reduce((r,n)=>(n in t&&(r[n]=t[n]),r),{}):t}var P=(d=>(d[d.String=0]="String",d[d.Int64=1]="Int64",d[d.Uint64=2]="Uint64",d[d.Float64=3]="Float64",d[d.Object=4]="Object",d[d.Array=5]="Array",d[d.Boolean=6]="Boolean",d[d.Null=7]="Null",d))(P||{}),S=class a{constructor(e,t){this.dataFile=e;this.indexFile=t}static forDataFileAndIndexFile(e,t){return new a(e,t)}async fields(){return await this.indexFile.indexHeaders()}async*query(e){if(new Set((e.where??[]).map(i=>i.key)).size>1)throw new Error("composite indexes not supported... yet");let{format:t}=await this.indexFile.metadata(),r=this.dataFile.getResolver();if(r===void 0)throw new Error("data file is undefined");let n=await this.indexFile.indexHeaders();for(let{key:i,value:o,operation:p}of e.where??[]){if(!n.find(h=>h.fieldName===i))throw new Error("field not found");let N=C(o);if(N===null)throw new Error(`unable to process key with a type ${typeof o}`);let{fieldType:x,valueBuf:y}=N,j=(await this.indexFile.seek(i,x))[0],{fieldType:z}=await B(await j.metadata()),R="ASC";e.orderBy&&e.orderBy[0]&&(R=e.orderBy[0].direction);let u=new A(this.indexFile.getResolver(),j,r,t,z);if(p===">")if(R==="ASC"){let h=new c({offset:0n,length:0},y),l=u.iter(h);for(;await l.next();){let f=l.getKey();if(c.compareBytes(y,f.value)===-1){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else{let h=await u.last(),l=u.iter(h);for(;await l.prev();){let f=l.getKey();if(c.compareBytes(y,f.value)===-1){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}else console.log("less than")}}else if(p===">=")if(R==="ASC"){let h=new c({offset:0n,length:0},y),l=u.iter(h);for(;await l.next();){let f=l.getKey(),g=c.compareBytes(y,f.value);if(g===-1||g===0){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else{let h=await u.last(),l=u.iter(h);for(;await l.prev();){let f=l.getKey(),g=c.compareBytes(y,f.value);if(g===-1||g===0){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else if(p==="=="){let h=new c({offset:0n,length:0},y),l=u.iter(h);for(;await l.next();){let f=l.getKey();if(c.compareBytes(y,f.value)===0){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else if(p==="<=")if(R==="DESC"){let h=new c({offset:b,length:0},y),l=u.iter(h);for(;await l.prev();){let f=l.getKey(),g=c.compareBytes(y,f.value);if(g===1||g===0){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else{let h=await u.first(),l=u.iter(h);for(;await l.next();){let f=l.getKey();if(c.compareBytes(y,f.value)===1){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else if(p==="<")if(R==="DESC"){let h=new c({offset:b,length:0},y),l=u.iter(h);for(;await l.prev();){let f=l.getKey();if(c.compareBytes(y,f.value)===1){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}else{let h=await u.first(),l=u.iter(h);for(;await l.next();){let f=l.getKey();if(c.compareBytes(y,f.value)===1){let[v,s]=await u.find(f),m=await this.dataFile.get(Number(s.offset),Number(s.offset)+s.length-1);yield w(m,e.select)}}}}}where(e,t,r){return new O(this).where(e,t,r)}};var D=class extends Error{constructor(){super("length integrity error")}};var G=4096,I=class{constructor(e){this.pageSize=G;this.resolver=e}async readPage(e){if(e<0)throw new Error("page cannot be indexed");let t=(e+1)*this.pageSize,r=t+this.pageSize-1,{data:n}=await this.resolver({start:t,end:r-1});return n}page(e){return e<0?BigInt(0):BigInt(e+1)*BigInt(this.pageSize)}};var F=class a{static async forUrl(e){return await a.forResolver(async({start:t,end:r,expectedLength:n})=>{let i=await fetch(e,{headers:{Range:`bytes=${t}-${r}`}}),o=Number(i.headers.get("Content-Range").split("/")[1]);if(n&&o!==n)throw new D;return{data:await i.arrayBuffer(),totalLength:o}})}static async forResolver(e){return new L(e)}};var L=class{constructor(e){this.resolver=e}getResolver(){return this.resolver}async tree(){if(this._tree)return this._tree;let e=new I(this.resolver),t=Q(this.resolver,e);return this._tree=t,t}async metadata(){let t=await(await this.tree()).metadata();if(t.byteLength<10)throw new Error(`incorrect byte length! Want: 10, got ${t.byteLength}`);let r=new DataView(t),n=r.getUint8(0),i=r.getUint8(1);if(Object.values(M).indexOf(i)===-1)throw new Error(`unexpected file format. Got: ${i}`);let o=r.getBigUint64(2);return{version:n,format:i,readOffset:o}}async seek(e,t){let r=await this.tree(),n=[];for(;r;){let i=await r.next();if(i===null)return n;let o=await B(await i.metadata());o.fieldName===e&&(t===3?(o.fieldType===3||o.fieldType===1||o.fieldType===2)&&n.push(i):o.fieldType===t&&n.push(i)),r=i}if(n.length===0)throw new Error(`No LinkedMetaPage with ${e} and type ${t} exists`);return n}async indexHeaders(){let e=[],t=await this.tree();for(;t;){let r=await t.next();if(r===null)return U(e);let n=await r.metadata(),i=await B(n);e.push(i),t=r}return U(e)}};async function _(a,e){return S.forDataFileAndIndexFile(typeof a=="string"?T.forUrl(a):T.forResolver(a),typeof e=="string"?await F.forUrl(e):await F.forResolver(e))}globalThis.Appendable={init:_,FieldType:P};})();
//# sourceMappingURL=appendable.min.js.map
